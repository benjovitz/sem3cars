package dat3.car.service;

import dat3.car.dto.CarRepsonse;
import dat3.car.dto.CarRequest;
import dat3.car.entity.Car;
import dat3.car.repository.CarRepository;
import dat3.car.repository.ReservationRepository;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.Optional;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.ArgumentMatchers.any;

@ExtendWith(MockitoExtension.class)
class CarServiceMockitoTest {

    @Mock
    CarRepository carRepository;
    @Mock
    ReservationRepository reservationRepository;

    CarService carService;
    @BeforeEach
    void setup(){
        carService = new CarService(carRepository, reservationRepository);
    }

    @Test
    void addMember() {
        Car c1 = new Car("VW","Golf",50.0);
        //If Id was generated by the server, for example as for car you would need to set the id here
        c1.setId(100);
        Mockito.when(carRepository.save(any(Car.class))).thenReturn(c1);
        CarRequest request = new CarRequest(c1);
        CarRepsonse response = carService.addCar(request);
        assertEquals(100,response.getId());
    }
    @Test
    void editCar(){
        Car c1 = new Car("VW","Golf",50.0);
        Car c2 = new Car("Ferrari","458",100.0);
        c1.setId(100);
        Mockito.when(carRepository.findById("100")).thenReturn(Optional.of(c1));
        Mockito.when(carRepository.save(any(Car.class))).thenReturn(c1);
        CarRequest carRequest = new CarRequest(c2);
        carService.editCar(c1.getId(),carRequest);
        assertEquals(100,c1.getId());
        assertEquals("Ferrari",c2.getBrand());
    }
    @Test
    void setDiscount(){
        Car c1 = new Car("VW","Golf",50.0);
        c1.setId(100);
        Mockito.when(carRepository.findById("100")).thenReturn(Optional.of(c1));
        Mockito.when(carRepository.save(any(Car.class))).thenReturn(c1);
        carService.setDiscount(c1.getId(),20);
        assertEquals(20,c1.getBestDiscount());
    }
}